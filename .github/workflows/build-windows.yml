name: Build Windows Installer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 15  # Add overall timeout
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r build_requirements.txt
        
    - name: Create assets directory and icon
      run: |
        if (!(Test-Path -Path "assets")) {
            New-Item -ItemType Directory -Path "assets" -Force
        }
        python -c "from PIL import Image; img = Image.new('RGB', (256, 256), color='blue'); img.save('assets/icon.ico', format='ICO')"
      shell: pwsh
        
    - name: Build executable
      run: python build.py
      
    - name: Download and Install Inno Setup
      run: |
        $setupUrl = "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe"
        $setupFile = "innosetup.exe"
        
        # Download with retry logic
        $maxAttempts = 3
        $attempt = 1
        do {
            try {
                Write-Host "Downloading Inno Setup (Attempt $attempt of $maxAttempts)..."
                Invoke-WebRequest -Uri $setupUrl -OutFile $setupFile -TimeoutSec 30
                break
            } catch {
                if ($attempt -eq $maxAttempts) {
                    throw "Failed to download Inno Setup after $maxAttempts attempts"
                }
                $attempt++
                Start-Sleep -Seconds 10
            }
        } while ($true)
        
        # Install with timeout
        Write-Host "Installing Inno Setup..."
        $process = Start-Process -FilePath $setupFile -ArgumentList "/VERYSILENT /SUPPRESSMSGBOXES /NORESTART" -PassThru
        $timeoutSeconds = 300
        if (Wait-Process -InputObject $process -Timeout $timeoutSeconds -ErrorAction SilentlyContinue) {
            Write-Host "Inno Setup installation completed"
        } else {
            Write-Host "Installation timed out after $timeoutSeconds seconds"
            Stop-Process -InputObject $process -Force
            throw "Inno Setup installation timed out"
        }
      shell: pwsh
        
    - name: Create installer directory
      run: |
        if (!(Test-Path -Path "installer")) {
            New-Item -ItemType Directory -Path "installer" -Force
        }
      shell: pwsh
      
    - name: Build installer
      run: |
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss
        
    - name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: ChiropracticManager-Installer
        path: installer/ChiropracticManager-Setup.exe 